// import { optional, z } from "zod"

// export const LTFormSchema = z.object({
//     jobNo: z.string().regex(/^\d+$/, { message: "job no must be number" }),
//     // jobNo: z.string().min(1,{message:"Job No is required"}),
//     caseNo: z.string().regex(/^\d+$/, { message: "case no must be number" }),
//     // caseNo: z.string().min(1,{message:"case No is required"}),

//     name: z.string().min(1, { message: "Name is require" }).optional(),
//     isActive: z.boolean().refine((value) => value === true, {
//         message: "This Checked is required",
//     }).optional(),
//     inputDate: z.string().refine(
//         (value) => {
//             const date = new Date(value)
//             return !isNaN(date.getTime())
//         },
//         { message: "Required Input Date" }
//     ),
//     clientId: z.string().min(1, "Please select client."),
//     serviceType: z.string().min(1, "Please select service type."),
//     caption: z.string().min(1, "Caption is required."),
//     lTServiceType:z.boolean().refine((value) => value === true, {
//         message: "This Checked is required",
//       }).optional(),
//       fullName: z.string().min(1, "Full name is required."),
//       businessName: z.string().min(1, "bussiness name is required."),
//       address: z.string().min(1, "address is required."),
//       apt: z.string().min(1, "apt is required."),
//       city: z.string().min(1, "city is required."),
//       state: z.string().min(1, "state is required."),
//       zip: z.string().min(1, "zip is required."),
//       description: z.string().min(1, "description is required."),
//     //   mailingAddress: z.string().min(1, "Please select service type."),
// })

import { optional, z } from "zod"

export const LTFormSchema = z.object({
    // jobNo: z.string().regex(/^\d+$/, { message: "job no must be number" }),
    // caseNo: z.string().regex(/^\d+$/, { message: "case no must be number" }),

    // name: z.string().min(1, { message: "Name is require" }).optional(),
    oLTDescription: z.string().optional(),

    // isActive: z.boolean().optional(),
    caseNo: z.any(),
    oLTIndexNo: z.any(),
    inputDate: z.any(),
    jobNo: z.any(),
    clientId: z.string().optional(),
    serviceType: z.string().optional(),
    timeTrip: z.string().optional(),
    caption: z.any(),
    lTServiceType: z.any(),
    lTSFirstName: z.string().optional(),
    lTSBusinessName: z.string().optional(),
    lTSAddress: z.string().optional(),
    lTSApt: z.string().optional(),
    lTSCity: z.string().optional(),
    lTSState: z.string().optional(),
    lTSZip: z.string().optional(),
    lTSDescription: z.string().optional(),
    noOfAddLMailings: z.string().optional(),
    mailingAddresses: z.string().optional(),
    lTSCityLongitude: z.string().optional(),
    lTSCityLatitude: z.string().optional(),
    //STANDARD FORM SCHEMA
    standardServiceType: z.boolean().optional(),
    oSSTIndexNo: z.string().optional(),
    oSSTDescription: z.string().optional(),
    sSDCourt: z.string().optional(),
    sSDDefendants: z.string().optional(),
    sSDPlaintiff: z.string().optional(),
    sSDCountry: z.string().optional(),
    // RESULT FORM SCHEMA
    startDate: z.string().optional(),
    endDate: z.string().optional(),

    queryInformationLTFullName: z.string().optional(),
    queryInformationLTIndexNo: z.string().optional(),
    queryInformationLTAddress: z.string().optional(),
    queryInformationLTBusinessName: z.string().optional(),
    queryInformationLTInputDate: z.string().optional(),
    queryInformationStandardServeTo: z.string().optional(),
    queryInformationStandardDefendants: z.string().optional(),
    queryInformationStandardPlaintiff: z.string().optional(),
    serviceResultInputDate: z.string().optional(),
    serviceResultScvType: z.string().optional(),
    // serviceResultClientId: z.string().optional(),
    // serviceResultJobNo: z.string().regex(/^\d+$/, { message: "Job  must be number" }),
    serviceResultJobNo: z.string().optional(),
    serviceResultServerId: z.string().optional(),
    serviceResultResults: z.string().optional(),
    serviceResultDateOfService: z.string().optional(),
    serviceResultTimeOfService: z.any(),
    serviceResultFirstTimeOfService: z.any(),
    serviceResultFirstAttemptDate: z.string().optional(),
    serviceResultSecondTimeOfService: z.any(),
    serviceResultSecondAttemptDate: z.string().optional(),
    serviceResultThirdTimeOfService: z.any(),
    serviceResultThirdAttemptDate: z.string().optional(),
    serviceResultlTServed: z.string().optional(),
    serviceResultlTNotServed: z.string().optional(),
    serviceResultRecipientTitle: z.string().optional(),
    serviceResultDoor: z.string().optional(),
    serviceResultRecipient: z.string().optional(),
    serviceResultDoorLocks: z.string().optional(),
    serviceResultEntry: z.string().optional(),
    serviceResultWall: z.string().optional(),
    serviceResultFloor: z.string().optional(),
    serviceResultLock: z.string().optional(),
    serviceResultOtherDescription: z.boolean().optional(),
    serviceResultSex: z.string().optional(),
    serviceResultSkinColor: z.string().optional(),
    serviceResultHair: z.string().optional(),
    serviceResultAge: z.string().optional(),
    serviceResultHeight: z.string().optional(),
    serviceResultWeight: z.string().optional(),
    serviceResultOtherFeatures: z.string().optional(),
    serviceResultDateOfMailing: z.string().optional(),
    serviceResultDateOfNotary: z.string().optional(),
    substituteDeliveredTo: z.string().optional(),
    corporateRecipient: z.string().optional(),

    //   mailingAddress: z.string().min(1, "Please select service type."),
})